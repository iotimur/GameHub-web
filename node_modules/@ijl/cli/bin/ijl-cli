#!/usr/bin/env node

const program = require("commander");

const {
    version
} = require("../package");

const setEnv = (env, value) => {
    if (value) {
        process.env[env] = value;
    }
    return value;
};

const HELP_MESSAGE = `
Для инициализации нового проекта наберите: ijl-cli init
To initialize a new project, type: ijl-cli init

Для запуска дев сервера: ijl-cli server --port=8099
To start the dev server: ijl-cli server --port=8099

Для запуска сборки: ijl-cli build --dev
To run a build: ijl-cli build --dev
`;

program
  .name('ijl-cli')
  .version(version)
  .description(HELP_MESSAGE)

program
  .command('build')
  .description('build project')
  .option("--dev", "build in developmant mode")
  .action(({ dev }) => {
    if (dev) {
      process.env.NODE_ENV = "development";
    }
    require("../src/webpack/build")();
  });

program
  .command('server')
  .description('start development server')
  .option("-B --with-open-browser", "open in browser")
  .option("-P --port [port]", "server port", "8090")
  .action((options) => {
    setEnv('NODE_ENV', 'development');
    setEnv('LOCALES', './locales');
    require("../src/server")(options);
  })

program
  .command('init')
  .description('initialize new project')
  .option('--advanced', 'additional flag for init comand')
  .action((options) => {
    require('../src/cli')({ ...options, init: true })
  })

program.parse();
